{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/access.app.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/create/create.component.html","webpack:///./src/app/create/create.component.ts","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/models/user.ts","webpack:///./src/app/services/authentication.service.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AccessApp implements CanActivate {\r\n  constructor(private router: Router) { }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    if (localStorage.getItem('currentUser')) {\r\n      return true;\r\n    }\r\n\r\n    this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\r\n    return false;\r\n  }\r\n}\r\n","\r\n  <div class=\"jumbotron\">\r\n    <div class=\"container\">\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-6 offset-sm-3\">\r\n          <router-outlet></router-outlet>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'DotNetCoreFinalProjectUI';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { routing } from './app.routing';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { CreateComponent } from './create/create.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    HomeComponent,\n    CreateComponent\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    routing\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<h2>Create User</h2>\r\n<form (ngSubmit)=\"onSubmit()\" [formGroup]=\"createForm\">\r\n  <div class=\"form-group\">\r\n    <label for=\"username\">Username</label>\r\n    <input type=\"text\"\r\n           formControlName=\"username\"\r\n           class=\"form-control\"\r\n           [ngClass]=\"{ 'is-invalid': submitted && formControls.username.errors }\" />\r\n    <div *ngIf=\"submitted && formControls.username.errors\"\r\n         class=\"invalid-feedback\">\r\n      <div *ngIf=\"formControls.username.errors.required\">Username is required</div>\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label for=\"password\">Password</label>\r\n    <input type=\"password\"\r\n           formControlName=\"password\"\r\n           class=\"form-control\"\r\n           [ngClass]=\"{ 'is-invalid': submitted && formControls.password.errors }\" />\r\n    <div *ngIf=\"submitted && formControls.password.errors\"\r\n         class=\"invalid-feedback\">\r\n      <div *ngIf=\"formControls.password.errors.required\">Password is required</div>\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label for=\"firstname\">First Name</label>\r\n    <input type=\"text\"\r\n           formControlName=\"firstname\"\r\n           class=\"form-control\"\r\n           [ngClass]=\"{ 'is-invalid': submitted && formControls.firstname.errors }\" />\r\n    <div *ngIf=\"submitted && formControls.firstname.errors\"\r\n         class=\"invalid-feedback\">\r\n      <div *ngIf=\"formControls.firstname.errors.required\">Firstname is required</div>\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label for=\"lastname\">Last Name</label>\r\n    <input type=\"text\"\r\n           formControlName=\"lastname\"\r\n           class=\"form-control\"\r\n           [ngClass]=\"{ 'is-invalid': submitted && formControls.lastname.errors }\" />\r\n    <div *ngIf=\"submitted && formControls.lastname.errors\"\r\n         class=\"invalid-feedback\">\r\n      <div *ngIf=\"formControls.lastname.errors.required\">Lastname is required</div>\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <button [disabled]=\"loading\" class=\"btn btn-primary\">Create</button>\r\n  </div>\r\n  <div *ngIf=\"error\"\r\n       class=\"alert alert-danger\">{{error}}</div>\r\n</form>\r\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { UserService } from '../services/user.service';\nimport { User } from '../models/user';\n\n@Component({\n  selector: 'app-create',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.scss']\n})\nexport class CreateComponent implements OnInit {\n  public createForm: FormGroup;\n  public returnUrl: string;\n\n  public loading = false;\n  public submitted = false;\n  public error = '';\n\n  constructor(private formBuilder: FormBuilder, private route: ActivatedRoute, private router: Router,\n    private userService: UserService) { }\n\n  ngOnInit() {\n    this.createForm = this.formBuilder.group({\r\n      username: ['', Validators.required],\n      password: ['', Validators.required],\r\n      firstname: ['', Validators.required],\r\n      lastname: ['', Validators.required]\r\n    });\n\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n  }\n\n  public get formControls() {\r\n    return this.createForm.controls\r\n  };\n\n  public onSubmit() {\n    this.submitted = true;\r\n\r\n    if (this.createForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.loading = true;\r\n\r\n    let user = new User();\r\n    user.userName = this.formControls.username.value;\r\n    user.password = this.formControls.password.value;\r\n    user.firstName = this.formControls.firstname.value;\r\n    user.lastName = this.formControls.lastname.value;\r\n\r\n    this.userService.createUser(user)\r\n      .pipe(first())\r\n      .subscribe(data => { this.router.navigate([this.returnUrl]) },\r\n        error => { this.error = error; this.loading = false; });\r\n  }\n\n}\n","<h1>Welcome to this simple Angular app!</h1>\r\n<div class=\"row\">\r\n  <div class=\"col-md-6\">\r\n  <label for=\"username\">Username</label>\r\n  </div>\r\n  <div class=\"col-md-6\">\r\n  <input type=\"text\" id=\"username\" disabled value=\"{{user.userName}}\" />\r\n  </div>\r\n</div>\r\n<div class=\"row\">\r\n  <div class=\"col-md-6\">\r\n  <label for=\"firstname\">First Name</label>\r\n  </div>\r\n  <div class=\"col-md-6\">\r\n  <input type=\"text\" id=\"firstname\" disabled value=\"{{user.firstName}}\" />\r\n  </div>\r\n</div>\r\n<div class=\"row\">\r\n  <div class=\"col-md-6\">\r\n  <label for=\"lastname\">Last Name</label>\r\n  </div>\r\n  <div class=\"col-md-6\">\r\n  <input type=\"text\" id=\"lastname\" disabled value=\"{{user.lastName}}\" />\r\n  </div>\r\n</div>\r\n<a [routerLink]=\"['/login']\">Logout</a>\r\n<!--\r\n<div class=\"form-group\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-2\">\r\n      <div>Username</div>\r\n      <div>{{user.userName}}</div>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-md-2\">\r\n      <div>First Name</div>\r\n      <div>{{user.firstName}}</div>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-md-2\">\r\n      <div>Last Name</div>\r\n      <div>{{user.lastName}}</div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<p><a [routerLink]=\"['/login']\">Logout</a></p>\r\n-->\r\n","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { User } from '../models/user';\nimport { UserService } from '../services/user.service';\n\n@Component({ templateUrl: './home.component.html' })\nexport class HomeComponent implements OnInit {\n  public user: User;\n\n  constructor(private userService: UserService) { }\n\n  ngOnInit() {\n\n    let currentUser : User = JSON.parse(localStorage.getItem('currentUser'));\n    this.userService.getUser(currentUser.id).pipe(first()).subscribe(user =>\n    {\n      this.user = user;\r\n    });\n  }\n\n}\n","<h2>Login</h2>\r\n<form (ngSubmit)=\"onSubmit()\" [formGroup]=\"loginForm\">\r\n  <div class=\"form-group\">\r\n    <label for=\"username\">Username</label>\r\n    <input type=\"text\"\r\n           formControlName=\"username\"\r\n           class=\"form-control\"\r\n           [ngClass]=\"{ 'is-invalid': submitted && formControls.username.errors }\" />\r\n    <div *ngIf=\"submitted && formControls.username.errors\"\r\n         class=\"invalid-feedback\">\r\n      <div *ngIf=\"formControls.username.errors.required\">Username is required</div>\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label for=\"password\">Password</label>\r\n    <input type=\"password\"\r\n           formControlName=\"password\"\r\n           class=\"form-control\"\r\n           [ngClass]=\"{ 'is-invalid': submitted && formControls.password.errors }\" />\r\n    <div *ngIf=\"submitted && formControls.password.errors\"\r\n         class=\"invalid-feedback\">\r\n      <div *ngIf=\"formControls.password.errors.required\">Password is required</div>\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <button [disabled]=\"loading\" class=\"btn btn-primary\">Login</button>\r\n  </div>\r\n  <div *ngIf=\"error\"\r\n       class=\"alert alert-danger\">{{error}}</div>\r\n</form>\r\n<a [routerLink]=\"['/create']\">Create Account</a>\r\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AuthenticationService } from '../services/authentication.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  public loginForm: FormGroup;\n  public returnUrl: string;\n\n  public loading = false;\n  public submitted = false;\n  public error = '';\n\n  constructor(private formBuilder: FormBuilder, private route: ActivatedRoute, private router: Router,\n              private authenticationService: AuthenticationService) { }\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({ username: ['', Validators.required], password: ['', Validators.required] });\n\n    this.authenticationService.logout();\n\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n\n  }\n\n  public get formControls() {\r\n    return this.loginForm.controls\r\n  };\n\n  public onSubmit() {\n    this.submitted = true;\r\n\r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.loading = true;\r\n\r\n    this.authenticationService.login(this.formControls.username.value, this.formControls.password.value)\r\n      .pipe(first())\r\n      .subscribe(data => { this.router.navigate([this.returnUrl]) },\r\n        error => { this.error = error; this.loading = false; });\r\n  }\n\n}\n","export class User {\r\n  public id: number;\r\n  public userName: string;\r\n  public password: string;\r\n  public firstName: string;\r\n  public lastName: string;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { User } from '../models/user';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthenticationService {\r\n  \r\n  constructor(private http: HttpClient) { }\r\n\r\n  public login(username: string, password: string) {\r\n\r\n    let url = environment.servicesUrl + '/security/authenticate';\r\n    let loginUser = new User;\r\n    loginUser.userName = username;\r\n    loginUser.password = password;\r\n\r\n    let httpHeaders = { headers: new HttpHeaders({ 'Accept': 'application/json' }) };\r\n\r\n    return this.http.post<any>(url, loginUser, httpHeaders)\r\n      .pipe(map(user => {\r\n        if (user) {\r\n          user.authdata = window.btoa(loginUser.userName + ':' + loginUser.password);\r\n          localStorage.setItem('currentUser', JSON.stringify(user));\r\n        }\r\n\r\n        return user;\r\n      }));\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem('currentUser');\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { User } from '../models/user';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class UserService {\r\n  \r\n  constructor(private http: HttpClient) { }\r\n\r\n  public getUser(userId: number) {\r\n    let url = environment.servicesUrl + '/users/' + userId;\r\n    let httpHeaders = { headers: new HttpHeaders({ 'Accept': 'application/json' }) };\r\n    return this.http.get<User>(url, httpHeaders);\r\n  }\r\n\r\n  public createUser(user: User) {\r\n    let url = environment.servicesUrl + '/users';\r\n    let httpHeaders = { headers: new HttpHeaders({ 'Accept': 'application/json' }) };\r\n    return this.http.post<any>(url, user, httpHeaders)\r\n      .pipe(map(user => {\r\n        if (user) {\r\n          user.authdata = window.btoa(user.userName + ':' + user.password);\r\n          localStorage.setItem('currentUser', JSON.stringify(user));\r\n        }\r\n\r\n        return user;\r\n      }));\r\n  }\r\n}\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  servicesUrl: 'http://localhost:54123/api'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}